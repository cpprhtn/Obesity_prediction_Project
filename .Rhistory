points(dd$time,dd$cum_dead)
lines(dd1$time,dd1$cum_heal,col="blue")
points(dd1$time,dd1$cum_heal,col="blue")
lines(dd1$time,dd1$cum_dead)
points(dd1$time,dd1$cum_dead)
#5월
plot(x=dd1$time,y=dd1$confirm,type = "o", col = "red", main = "Kor_increasing_trend",
xlab = "Date", ylab = "confirm",lty =6, sub = "red = confirm, blue = heal, black = dead")
lines(dd1$time,dd1$cum_heal,col="blue")
points(dd1$time,dd1$cum_heal,col="blue")
lines(dd1$time,dd1$cum_dead)
points(dd1$time,dd1$cum_dead)
#이태원 4/30~5/5
Itaewon <- dd[71 : 76,]
plot(x=Itaewon$time,y=Itaewon$confirm,type = "o", col = "red", main = "Kor_increasing_trend",
xlab = "Date", ylab = "confirm",lty =6)
plot(x=Itaewon$time,y=Itaewon$confirm,type = "o", col = "red", main = "Itaewon_increasing_trend",
xlab = "Date", ylab = "confirm",lty =6)
#Coupang 물류센터 5월 25~
Coupang <- dd[96 : 100,]
plot(x=Coupang$time,y=Coupang$confirm,type = "o", col = "red", main = "Coupang_increasing_trend",
xlab = "Date", ylab = "confirm",lty =6)
callcenter<- dd[19 : 35,]
library('remotes')
library('nCov2019')
library(ggplot2)
d <- load_nCov2019()
dd <- d['global'] %>%
as_tibble %>%
rename(confirm=cum_confirm) %>%
filter(confirm > 100 & country == "South Korea") %>%
group_by(country) %>%
mutate(days_since_100 = as.numeric(time - min(time))) %>%
ungroup
View(dd)
#이태원 4/30 ~ 5/5
Itaewon <- dd[71 : 76,]
#Coupang 물류센터 5월 25 ~
Coupang <- dd[96 : 100,]
#구로시 콜센터 감염 3/9, 3/24
callcenter<- dd[19 : 35,]
plot(x=callcenter$time,y=callcenter$confirm,type = "o", col = "red", main = "callcenter_increasing_trend",
xlab = "Date", ylab = "confirm",lty =6)
library('remotes')
library('nCov2019')
library(ggplot2)
# Korea
nCov2019_set_country('South Korea')
Kor <- load_nCov2019(lang = 'en', source = 'github')
head(kor['province'])
Kor["province"] -> Kor_Data
View(Kor_Data)
library('remotes')
library('nCov2019')
library(ggplot2)
# Korea
nCov2019_set_country('South Korea')
Kor <- load_nCov2019(lang = 'en', source = 'github')
head(Kor['province'])
Kor["province"] -> Kor_Data
View(Kor_Data)
str(Kor["province"])
Kor_Data$province
str(Kor_Data$province)
Kor_Data$province[2]
Kor_coda <- Kor_Data[,c(1,4,5,6)]
View(Kor_coda)
coda2 <- Kor_Data[c(1369:1440),c(1,4,5,6)]
View(coda2)
require(dplyr)
require(ggplot2)
require(shadowtext)
require(nCov2019)
d <- load_nCov2019()
dd <- d['global'] %>%
as_tibble %>%
rename(confirm=cum_confirm) %>%
filter(confirm > 100 & country == "South Korea") %>%
group_by(country) %>%
mutate(days_since_100 = as.numeric(time - min(time))) %>%
ungroup
View(dd)
require(dplyr)
require(ggplot2)
require(nCov2019)
alldata <- load_nCov2019()
Kor_Data <- alldata['global'] %>%
as_tibble %>%
rename(confirm=cum_confirm) %>%
filter(confirm > 100 & country == "South Korea") %>%
group_by(country) %>%
mutate(days_since_100 = as.numeric(time - min(time))) %>%
ungroup
View(Kor_Data)
View(Kor_Data)
#write.csv(dd, "/Users/cpprhtn/Desktop/Kor_data2.csv")
getwd()
#시각화
plot(x=Kor_Data$time, y=Kor_Data$cum_confirm)
p <- ggplot(Kor_Data, aes(time, cum_confirm))
print(p)
#시각화
plot(x=Kor_Data$time, y=Kor_Data$cum_confirm)
View(Kor_Data)
#시각화
plot(x=Kor_Data$time, y=Kor_Data$confirm)
#시각화
plot(x=Kor_Data$time, y=Kor_Data$confirm, type = "l")
#시각화
plot(x=Kor_Data$time, y=Kor_Data$confirm, type = "b")
#시각화
plot(x=Kor_Data$time, y=Kor_Data$confirm, type = "d")
#시각화
plot(x=Kor_Data$time, y=Kor_Data$confirm, type = "o")
#시각화
plot(x=Kor_Data$time, y=Kor_Data$confirm, type = "l")
View(Kor_Data)
p <- ggplot(Kor_Data, aes(time, confirm))
print(p)
p <- ggplot(Kor_Data, aes(time, confirm)) + geom_line()
print(p)
View(Kor_Data)
Kor_Data <- alldata['global'] %>%
as_tibble %>%
filter(country == "South Korea") %>%
group_by(country)
View(Kor_Data)
View(Kor_Data)
Kor_Data <- alldata['global'] %>%
as_tibble %>%
rename(confirm=cum_confirm) %>%
filter(country == "South Korea") %>%
group_by(country)
View(Kor_Data)
View(Kor_Data)
p <- ggplot(Kor_Data, aes(time, confirm)) + geom_line()
print(p)
ggplot(coda, aes(x = time, y = count, color = type)) +
geom_line(lwd = 2) +
scale_x_date(breaks = "month") +
xlab(label = "Date") +
ylab(label = " ") +
ggtitle("<Korea increasing trend>") +
theme_set(theme_gray(base_family='NanumGothic'))+
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="steelblue"))
#국내 확진 추이
Kor_Data <- Kor_Data %>% select(time, confirm, cum_heal, cum_dead)
str(Kor_Data)
View(Kor_Data)
View(Kor_Data)
ggplot(Kor_Data, aes(x = time, y = count, color = type)) +
geom_line(lwd = 2) +
scale_x_date(breaks = "month") +
xlab(label = "Date") +
ylab(label = " ") +
ggtitle("<Korea increasing trend>") +
theme_set(theme_gray(base_family='NanumGothic'))+
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="steelblue"))
coda <- melt(Kor_Data,id.vars="time",variable.name = "type", value.name = "count")
library(tidyr)
coda <- melt(Kor_Data,id.vars="time",variable.name = "type", value.name = "count")
library(reshape2)
coda <- melt(Kor_Data,id.vars="time",variable.name = "type", value.name = "count")
View(coda)
View(coda)
ggplot(Kor_Data, aes(x = time, y = count, color = type)) +
geom_line(lwd = 2) +
scale_x_date(breaks = "month") +
xlab(label = "Date") +
ylab(label = " ") +
ggtitle("<Korea increasing trend>") +
theme_set(theme_gray(base_family='NanumGothic'))+
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="steelblue"))
fit <- lm(Kor_Data$confirm ~ kor_coda$time)
summary(fit)
fit <- lm(Kor_Data$confirm ~ kor_coda$time)
fit <- lm(Kor_Data$confirm ~ Kor_Data$time)
summary(fit)
abline(fit, col = "purple",  lwd="3")
fit$coefficients[[1]]
#전체 기울기
fit$coefficients[[2]] #109.5699
#신천지 이전
coda1 <- Kor_Data[c(1:29),]
fit_1 <- lm(coda1$confirm ~ coda1$time)
fit_1$coefficients[[2]] #0.2208539
fit_1$coefficients[[2]] #1.383183
abline(fit_1, col="dark blue", lwd="3")
print(p)
abline(fit, col = "purple",  lwd="3")
abline(fit_1, col="dark blue", lwd="3")
#시각화
plot(x=Kor_Data$time, y=Kor_Data$confirm, type = "l")
abline(fit, col = "purple",  lwd="3")
fit$coefficients[[1]]
abline(fit_1, col="dark blue", lwd="3")
#신천지 영항력 2/18 ~ 3/8
coda2 <- kor_coda[c(30:49),]
fit_2 <- lm(coda2$confirm ~ coda2$time)
#신천지 영항력 2/18 ~ 3/8
coda2 <- Kor_Data[c(30:49),]
fit_2 <- lm(coda2$confirm ~ coda2$time)
fit_2$coefficients[[2]] #432.2105
#구로 콜센터 3/9~3/25
coda3 <- Kor_Data[c(50:66),]
fit_3 <- lm(coda3$confirm ~ coda3$time)
fit_3$coefficients[[2]] #103.6201
abline(fit_3,col="dark blue", lwd="3")
#사이 4/10~5/9
coda4 <- Kor_Data[c(67:110),]
fit_4 <- lm(coda4$confirm ~ coda4$time)
fit_4$coefficients[[2]] #24.12121
abline(fit_4,col="green", lwd="3")
#이태원 5/10~5/15
coda5 <- Kor_Data[c(111:116),]
fit_5 <- lm(coda5$confirm ~ coda5$time)
fit_5$coefficients[[2]] #28.34286
abline(fit_5,col="yellow", lwd="3")
#사이 5/16~5/25
coda6 <- Kor_Data[c(118:127),]
fit_6 <- lm(coda6$confirm ~ coda6$time)
fit_6$coefficients[[2]] #19.42424
abline(fit_6,col="green", lwd="3")
abline(fit_6,col="dark green", lwd="3")
#쿠팡 집단감염 5/27 ~
coda7 <- Kor_Data[c(128:134),]
fit_7 <- lm(coda7$confirm ~ coda7$time)
fit_7$coefficients[[2]] #47.75
abline(fit_7,col="green", lwd="3")
city <- c("합계","서울","부산","대구","인천","광주","대전","울산","태종","경기","강원","충북",
"충남","전북","전남","경북","경남","제주","검역")
count <- c(0:18)
total <- c("57","27","0","1","6","0","0","1","0","19","0","1","0","0","0","0","0","0","2")
abroad <- c("4","0","0","0","0","0","0","1","0","0","0","1","0","0","0","0","0","0","2")
local <- c("53","27","0","1","6","0","0","0","0","19","0","0","0","0","0","0","0","0","0")
confirmed <- c("11776","974","147","6887","279","32","46","53","47","934","58","61","148","21","20","1383","124","15","547")
isolation <- c("951","319","4","59","161","2","3","6","0","237","4","12","5","2","3","25","2","2","105")
unisolation <- c("10552","651","140","6640","118","30","42","46","47","678","51","49","143","19","17","1304","122","13","442")
death <- c("273","4","3","188","0","0","1","1","0","19","3","0","0","0","0","54","0","0","0")
percent <- c("22.71","10.01","4.31","282.66","9.44","2.2","3.12","4.62","13.73","7.05","3.76","3.81","6.97","1.16","1.07","51.94","3.69","2.24","")
all <- data.frame(count,city,total,abroad,local,confirmed,isolation,unisolation,death,percent)
View(all)
View(all)
plot(all$count,all$isolation,col="red",type="c")
#국내 확진 추이
kor_coda <- Kor_Data %>% select(time, confirm, cum_heal, cum_dead)
str(kor_coda)
kor_coda$time <- as.Date(kor_coda$time)
coda <- melt(kor_coda,id.vars="time",variable.name = "type", value.name = "count")
ggplot(coda, aes(x = time, y = count, color = type)) +
geom_line(lwd = 2) +
scale_x_date(breaks = "month") +
xlab(label = "Date") +
ylab(label = " ") +
ggtitle("<Korea increasing trend>") +
theme_set(theme_gray(base_family='NanumGothic'))+
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="steelblue"))
#국내 확진 추이
Kor_Data[c(2:5),]
#국내 확진 추이
Kor_Data[,c(2:5)]
#국내 확진 추이
Kor_Data[,c(2:5)] -> Kor_Data
kor_coda <- Kor_Data %>% select(time, confirm, cum_heal, cum_dead)
str(kor_coda)
kor_coda$time <- as.Date(kor_coda$time)
coda <- melt(kor_coda,id.vars="time",variable.name = "type", value.name = "count")
ggplot(coda, aes(x = time, y = count, color = type)) +
geom_line(lwd = 2) +
scale_x_date(breaks = "month") +
xlab(label = "Date") +
ylab(label = " ") +
ggtitle("<Korea increasing trend>") +
theme_set(theme_gray(base_family='NanumGothic'))+
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="steelblue"))
#종합 2/20 ~ 5/29
plot(x=kor_coda$time,y=kor_coda$confirm,type = "o", col = "red", main = "Kor_increasing_trend",xlim = c(min(as.Date(Kor_Data$time)),max(as.Date(Kor_Data$time))),
xlab = "Date", ylab = "confirm",lty =6, sub = "red = confirm, blue = heal, black = dead")
lines(Kor_Data$time,Kor_Data$cum_heal,col="blue")
points(Kor_Data$time,Kor_Data$cum_heal,col="blue")
lines(Kor_Data$time,Kor_Data$cum_dead)
points(Kor_Data$time,Kor_Data$cum_dead)
#이태원 4/30 ~ 5/5
Itaewon <- Kor_Data[71 : 76,]
plot(x=Itaewon$time,y=Itaewon$confirm,type = "o", col = "red", main = "Itaewon_increasing_trend",
xlab = "Date", ylab = "confirm",lty =6)
#Coupang 물류센터 5월 25 ~
Coupang <- Kor_Data[96 : 100,]
plot(x=Coupang$time,y=Coupang$confirm,type = "o", col = "red", main = "Coupang_increasing_trend",
xlab = "Date", ylab = "confirm",lty =6)
#구로시 콜센터 감염 3/9 ~ 3/24
callcenter<- Kor_Data[19 : 35,]
plot(x=callcenter$time,y=callcenter$confirm,type = "o", col = "red", main = "callcenter_increasing_trend",
xlab = "Date", ylab = "confirm",lty =6)
#전체 기울기
fit$coefficients[[2]] #94.30896
fit <- lm(Kor_Data$confirm ~ Kor_Data$time)
summary(fit)
abline(fit, col = "purple",  lwd="3")
#신천지 이전
coda1 <- Kor_Data[c(1:29),]
fit_1 <- lm(coda1$confirm ~ coda1$time)
fit_1$coefficients[[2]] #1.383183
abline(fit_1, col="dark blue", lwd="3")
#신천지 영항력 2/18 ~ 3/8
coda2 <- Kor_Data[c(30:49),]
fit_2 <- lm(coda2$confirm ~ coda2$time)
fit_2$coefficients[[2]] #462.3271
abline(fit_2,col="black", lwd="3")
UCBAdmissions -> test
test
test[1,,]
test[2,,]
test[,1,]
test[1,1,]
addmargins(apply(UCBAdmissions, c(2,1), sum)) # 행별 열별 합계 추가
addmargins(apply(UCBAdmissions, c(2,1), sum))
addmargins(apply(UCBAdmissions, c(2,1), sum)) ->
addmargins(apply(UCBAdmissions, c(2,1), sum)) -> test
addmargins(apply(UCBAdmissions, c(2,1), sum)) ->
test
addmargins(apply(UCBAdmissions, c(2,1), sum)) ->
test
test
View(test)
View(test)
test[1,1]/test[1,3]
test[1,1]/test[1,3] -> man
test[2,1]/test[2,3] -> woman
man
woman
View(test)
addmargins(apply(UCBAdmissions, c(3,1), sum)) -> test
View(test)
View(test)
View(test)
test[1,1]/test[1,3] -> A_
test[2,1]/test[2,3] -> B_
A_
test[1,1]/test[1,3] -> A_
test[2,1]/test[2,3] -> B_
test[3,1]/test[3,3] -> C_
test[4,1]/test[4,3] -> D_
test[5,1]/test[5,3] -> E_
test[6,1]/test[6,3] -> F_
A_
A_
B_
C_
D_
E_
F_
View(test)
apply(UCBAdmissions, c(3,1), sum)
apply(UCBAdmissions, c(3,1), sum) -> test
View(test)
apply(UCBAdmissions, c(3,1), sum) -> test
View(test)
apply(UCBAdmissions, c(3,1), sum) -> test
test[1,1]/(test[1,1]+test[1,2]) -> A_
A_
View(test)
addmargins(apply(UCBAdmissions, 3, sum)) -> test1
addmargins(apply(UCBAdmissions, 1, sum)) -> test1
addmargins(apply(UCBAdmissions, 2, sum)) -> test1
getwd()
library(readr)
movies_test <- read_csv("Desktop/git_local/Pusan_AI_ML/movies/movies_test.csv")
View(movies_test)
library(readr)
movies_train <- read_csv("Desktop/git_local/Pusan_AI_ML/movies/movies_train.csv")
View(movies_train)
library(readr)
submission <- read_csv("Desktop/git_local/Pusan_AI_ML/movies/submission.csv")
View(submission)
library(readr)
train <- read_csv("Desktop/git_local/Pusan_AI_ML/movies/train.csv")
View(train)
library(readr)
test <- read_csv("Desktop/git_local/Pusan_AI_ML/movies/test.csv")
View(test)
test.summary()
summary(test)
summary(test[,2])
summary(test[2,])
View(test)
View(train)
View(train)
train[,5]
View(train)
train[,3]
summary(train[,3])
str(train[,3])
train[,3] -> genre
View(genre)
View(genre)
summary(genre)
str(genre)
summary(str(genre))
rm(list=ls())
library(MASS)
install.packages('party')
library(party)
library(ggplot2)
setwd("/Users/cpprhtn/Desktop/git_local/Obesity_prediction_project")
read.csv("EDA/종속변수생성/b_10.csv",header = T,fileEncoding = "CP949") -> b_10
read.csv("EDA/종속변수생성/b_11.csv",header = T,fileEncoding = "CP949") -> b_11
read.csv("EDA/종속변수생성/b_12.csv",header = T,fileEncoding = "CP949") -> b_12
read.csv("EDA/종속변수생성/b_13.csv",header = T,fileEncoding = "CP949") -> b_13
read.csv("EDA/종속변수생성/b_14.csv",header = T,fileEncoding = "CP949") -> b_14
read.csv("EDA/종속변수생성/b_15.csv",header = T,fileEncoding = "CP949") -> b_15
read.csv("EDA/종속변수생성/b_16.csv",header = T,fileEncoding = "CP949") -> b_16
read.csv("EDA/종속변수생성/b_17.csv",header = T,fileEncoding = "CP949") -> b_17
dt_busan = rbind(b_10,b_11,b_12,b_13,b_14,b_15,b_16,b_17)
#다항의 decision tree model로 예층하기위해서 종속변수의 범주는 string format를 주기로 함
#1=G_underweight, 2=G_normal, 3=G_obesity
dt_busan[,"Multinomial"] <- 0
View(dt_busan)
dt_busan['Obesity']
dt_busan['Obesity'][1]
dt_busan['Obesity'][1]
dt_busan[1]['Obesity']
dt_busan['Obesity'][2]
dt_busan['Obesity'][2]
dt_busan$Obesity[1]
for (i in 1:109314){
if (dt_busan$Obesity[i] == 1){
dt_busan$Multinomial[i] == G_underweight
}
}
for (i in 1:109314){
if (dt_busan$Obesity[i] == 1){
dt_busan$Multinomial[i] == 'G_underweight'
}
}
View(dt_busan)
View(dt_busan)
#다항의 decision tree model로 예층하기위해서 종속변수의 범주는 string format를 주기로 함
#1=G_underweight, 2=G_normal, 3=G_obesity
dt_busan[,"Multinomial"] <- 'G_obesity'
View(dt_busan)
for (i in 1:109314){
if (dt_busan$Obesity[i] == 1){
dt_busan$Multinomial[i] == 'G_underweight'
}
}
View(dt_busan)
dt_busan$Obesity[i] == 1
dt_busan$Obesity[1] == 1
dt_busan$Obesity[2] == 1
dt_busan$Obesity[13] == 1
for (i in 1:109314){
for (i in 1:109314){
for (i in 1:109314){
if (dt_busan$Obesity[i] == 1){
dt_busan$Multinomial[i] == 'G_underweight'
}
else if (dt_busan$Obesity[i] == 2){
dt_busan$Multinomial[i] == 'G_normal'
}
for (i in 1:109314){
if (dt_busan$Obesity[i] == 1){
dt_busan$Multinomial[i] == 'G_underweight'
}
else if (dt_busan$Obesity[i] == 2){
dt_busan$Multinomial[i] == 'G_normal'
}
}
}
}
}
}
#다항의 decision tree model로 예층하기위해서 종속변수의 범주는 string format를 주기로 함
#1=G_underweight, 2=G_normal, 3=G_obesity
dt_busan[,"Multinomial"] <- 'G_obesity'
for (i in 1:109314){
if (dt_busan$Obesity[i] == 1){
dt_busan$Multinomial[i] == 'G_underweight'
}
else if (dt_busan$Obesity[i] == 2){
dt_busan$Multinomial[i] == 'G_normal'
}
}
View(dt_busan)
dt_busan$Multinomial[i] <- 'G_normal'
for (i in 1:109314){
if (dt_busan$Obesity[i] == 1){
dt_busan$Multinomial[i] <- 'G_underweight'
}
else if (dt_busan$Obesity[i] == 2){
dt_busan$Multinomial[i] <- 'G_normal'
}
}
View(dt_busan)
read.csv("Predict_Model/input_columns.csv",header = T, sep = ',') -> input
read.csv("Predict_Model/output_multinomial.csv",header = T,sep=',') -> output
input_value = c(colnames(input))
output_value = c(colnames(output))
form = as.formula(paste(paste(output_value, collapse = '+'),'~',paste(input_value, collapse = '+')))
i_ctree = ctree(form,dt_busan)
pre_Normal = sapply(predict(i_ctree,dt_busan,type='prob'),'[[',2)
str(dt_busan$Multinomial)
